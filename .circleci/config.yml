version: 2.1

orbs:
  slack: circleci/slack@3.4.2

executors:
  docker-executor:
    docker:
      - image: 218546966473.dkr.ecr.us-east-1.amazonaws.com/circle-ci:stitch-tap-tester

jobs:
  build:
    executor: docker-executor
    steps:
      - run: echo 'CI done'
  ensure_env:
    executor: docker-executor
    steps:
      - checkout
      - run:
          name: 'Setup Virtual Env'
          command: |
            python3 -mvenv /usr/local/share/virtualenvs/tap-salesforce
            source /usr/local/share/virtualenvs/tap-salesforce/bin/activate
            pip install -U 'pip<19.2' 'setuptools<51.0.0'
            pip install .[dev]
      - slack/notify-on-failure:
          only_for_branches: master
      - persist_to_workspace:
          root: /usr/local/share/virtualenvs
          paths:
            - tap-salesforce
  run_pylint:
    executor: docker-executor
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'Run pylint'
          command: |
            aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/tap-tester/tap_tester_sandbox dev_env.sh
            source dev_env.sh
            source /usr/local/share/virtualenvs/tap-salesforce/bin/activate
            pip install pylint
            echo "pylint will skip the following: $PYLINT_DISABLE_LIST"
            pylint tap_salesforce -d "$PYLINT_DISABLE_LIST,stop-iteration-return"
  run_integration_tests:
    executor: docker-executor
    parallelism: 8
    steps:
      - checkout
      - attach_workspace:
          at: /usr/local/share/virtualenvs
      - run:
          name: 'Run Integration Tests'
          no_output_timeout: 30m
          command: |
            aws s3 cp s3://com-stitchdata-dev-deployment-assets/environments/tap-tester/tap_tester_sandbox dev_env.sh
            source dev_env.sh
            source /usr/local/share/virtualenvs/tap-tester/bin/activate
            circleci tests glob "tests/*.py" | circleci tests split > ./tests-to-run
            if [ -s ./tests-to-run ]; then
              for test_file in $(cat ./tests-to-run)
              do
                run-test --tap=${CIRCLE_PROJECT_REPONAME} $test_file
              done
            fi
      - slack/notify-on-failure:
          only_for_branches: master

workflows:
  version: 2
  commit: &commit_jobs
    jobs:
      - ensure_env:
          context:
            - circleci-user
            - tier-1-tap-user
      - run_pylint:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - run_integration_tests:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - ensure_env
      - build:
          context:
            - circleci-user
            - tier-1-tap-user
          requires:
            - run_pylint
            - run_integration_tests
  build_daily:
    <<: *commit_jobs
    triggers:
      - schedule:
          cron: "0 1 * * *"
          filters:
            branches:
              only:
                - master
